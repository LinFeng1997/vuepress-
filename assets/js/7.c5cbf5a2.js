(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{154:function(e,a,i){"use strict";i.r(a);var t=i(0),l=Object(t.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,a=e.$createElement,i=e._self._c||a;return i("div",{staticClass:"content"},[i("h2",{attrs:{id:"cli（8分钟）"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#cli（8分钟）","aria-hidden":"true"}},[e._v("#")]),e._v(" cli（8分钟）")]),i("ul",[i("li",[e._v("使用 semver 限制 node 版本")]),i("li",[e._v("引入 commander\n"),i("ul",[i("li",[e._v("支持命令行传参功能")]),i("li",[e._v("错误处理增强")]),i("li",[e._v("在实际调用 dev、build 等函数的时候包了一层:wrapCommand，其实就是一个错误装饰器")])])])]),i("h3",{attrs:{id:"prepare-js-的步骤"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#prepare-js-的步骤","aria-hidden":"true"}},[e._v("#")]),e._v(" prepare.js 的步骤")]),i("ol",[i("li",[e._v("加载用户选项，大多是 config.js 里的配置(通过 loadConfig 方法)\n"),i("ul",[i("li",[e._v("根据 base 处理 head 标签的 url")]),i("li",[e._v("解析 outDir")]),i("li",[e._v("解析 theme，默认解析 default-theme 下的组件，如果用户自定义了就替换之")]),i("li",[e._v("解析 theme config")]),i("li",[e._v("解析 algolia，一个搜索工具")]),i("li",[e._v("解析 markdown")]),i("li",[e._v("解析 pageFiles，使用 globby 预处理")]),i("li",[e._v("解析 lastUpdated")]),i("li",[e._v("解析 pagesData\n"),i("ul",[i("li",[e._v("解析页面数据的时候给返回的 data 增加 key 属性，随机的，并且 path 属性也经过 encodePath 的编码")])])]),i("li",[e._v("解析 site data")]),i("li",[e._v("最后得到")])]),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[e._v("{\n    siteConfig,\n    siteData,\n    sourceDir,\n    outDir,\n    publicPath: base,\n    pageFiles,\n    pagesData,\n    themePath,\n    themeLayoutPath,\n    themeNotFoundPath,\n    themeEnhanceAppPath,\n    useDefaultTheme,\n    isAlgoliaSearch,\n    markdown\n}\n")])])])]),i("li",[e._v("生成路由和组件注册代码\n"),i("ul",[i("li",[e._v("文件就是字符串")])])]),i("li",[e._v("生成站点数据\n"),i("ul",[i("li",[e._v("辅助搜索等")]),i("li",[e._v("测试也有用到")]),i("li",[e._v("展示 lib/app/.temp/siteData.js")])])]),i("li",[e._v("处理用户复写\n"),i("ul",[i("li",[e._v("样式覆盖")]),i("li",[e._v("全局应用增强")]),i("li",[e._v("主题覆盖")])])])]),i("h3",{attrs:{id:"dev-js-启动服务"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#dev-js-启动服务","aria-hidden":"true"}},[e._v("#")]),e._v(" dev.js 启动服务")]),i("ul",[i("li",[e._v("dev 函数增加 cliOptions 参数，从而端口等可自定义")]),i("li",[e._v("页面通过 Watcher 文件热更新，忽略文档的 md 文件")]),i("li",[e._v("解析 webpack 配置，并使用 vuepress-html-webpack-plugin 、HeadPlugin(处理 siteConfig)、DevLogPlugin 插件\n"),i("ul",[i("li",[e._v("从 siteConfig.configureWebpack 获取用户自定义 webpack 配置，然后通过 applyUserWebpackConfig 合并到当前配置")]),i("li",[e._v("自定义插件在 webpack 部分再提及")])])]),i("li",[e._v("webpack-server 启服务 + koa 的各种中间件")])]),i("h3",{attrs:{id:"build-js-构建-ssr"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#build-js-构建-ssr","aria-hidden":"true"}},[e._v("#")]),e._v(" build.js 构建 SSR")]),i("ul",[i("li",[e._v("build 函数增加 cliOptions 参数，从而输出文件夹、端口等可自定义")]),i("li",[e._v("应用用户自定义的 webpack 配置")]),i("li",[e._v("通过 manifests 进行 SSR 渲染\n"),i("ul",[i("li",[e._v("渲染页面那里有较大改动，新增 "),i("code",[e._v("renderPage({ path: pagePath })")]),e._v(" 异步函数\n"),i("ul",[i("li",[e._v("就是之前的构造上下文、渲染 HTML 字符串写入文件的逻辑")])])])])]),i("li",[e._v("从 siteConfig.configureWebpack 获取用户自定义配置，然后通过 applyUserWebpackConfig 合并到当前配置")]),i("li",[e._v("开启 worker 实现 PWA")])]),i("h3",{attrs:{id:"eject-弹出以自定义配置"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#eject-弹出以自定义配置","aria-hidden":"true"}},[e._v("#")]),e._v(" eject 弹出以自定义配置")]),i("ul",[i("li",[e._v("实际就是拷贝文件 + 把文件内容当字符串改掉")])])])}],!1,null,null,null);a.default=l.exports}}]);